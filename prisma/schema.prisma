// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  passwordHash String   @map("password_hash")
  companyName  String   @map("company_name")
  industry     String?
  employees    Int      @default(0)
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  calculations  Calculation[]
  subscriptions Subscription[]
  reports       Report[]

  @@map("users")
}

model Calculation {
  id          Int      @id @default(autoincrement())
  userId      Int      @map("user_id")
  companyData Json     @map("company_data")
  results     Json
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  reports Report[]

  @@map("calculations")
}

model Subscription {
  id                     Int      @id @default(autoincrement())
  userId                 Int      @map("user_id")
  stripeCustomerId       String?  @map("stripe_customer_id")
  stripeSubscriptionId   String?  @unique @map("stripe_subscription_id")
  planName               String   @map("plan_name")
  status                 String   @default("active")
  createdAt              DateTime @default(now()) @map("created_at")
  updatedAt              DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("subscriptions")
}

model Report {
  id            Int      @id @default(autoincrement())
  userId        Int      @map("user_id")
  calculationId Int      @map("calculation_id")
  fileName      String   @map("file_name")
  filePath      String   @map("file_path")
  createdAt     DateTime @default(now()) @map("created_at")

  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  calculation Calculation @relation(fields: [calculationId], references: [id], onDelete: Cascade)

  @@map("reports")
}
